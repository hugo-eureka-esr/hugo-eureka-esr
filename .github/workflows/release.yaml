name: release
permissions:
  # For creating a release
  contents: write
  # For deployment to GitHub Pages
  pages: write
  id-token: write

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release Eureka
    steps:
      - name: Checkout Eureka
        uses: actions/checkout@v4
      - name: Release Eureka
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
  build:
      runs-on: ubuntu-latest
      env:
        HUGO_VERSION: 0.145.0
        HUGO_ENVIRONMENT: production
        TZ: Europe/Amsterdam
      steps:
        - name: Install Hugo CLI
          run: |
            wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
            && sudo dpkg -i ${{ runner.temp }}/hugo.deb
        - name: Install Dart Sass
          run: sudo snap install dart-sass
        - name: Checkout
          uses: actions/checkout@v4
          with:
            submodules: recursive
            fetch-depth: 0
        - name: Setup Pages
          id: pages
          uses: actions/configure-pages@v5
        - name: Install Node.js dependencies
          run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
        - name: Cache Restore
          id: cache-restore
          uses: actions/cache/restore@v4
          with:
            path: |
              ${{ runner.temp }}/hugo_cache
            key: hugo-${{ github.run_id }}
            restore-keys: hugo-
        - name: Build with Hugo
          run: |
            hugo \
              --gc \
              --minify \
              --baseURL "${{ steps.pages.outputs.base_url }}/" \
              --cacheDir "${{ runner.temp }}/hugo_cache"
        - name: Cache Save
          id: cache-save
          uses: actions/cache/save@v4
          with:
            path: |
              ${{ runner.temp }}/hugo_cache
            key: ${{ steps.cache-restore.outputs.cache-primary-key }}
        - name: Upload artifact
          uses: actions/upload-pages-artifact@v3
          with:
            path: ./public
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4